@using System.Text.Json
@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>
<p><strong>Message EN:</strong> @messageEn</p>
<p><strong>Message JA:</strong> @messageJa</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    // private WeatherForecast[]? forecasts;
    private List<WeatherForecast> forecasts;
    private string messageEn;
    private string messageJa;

    protected override async Task OnInitializedAsync()
    {

        var response = await Http.GetFromJsonAsync<ApiResponse<WeatherForecast>>(
            "sample-data/test.json"
        );

        messageEn = response.MessageEn;
        messageJa = response.MessageJa;
        forecasts = response.Data; // Data đã là List<WeatherForecast>

        // forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }
    public class ApiResponse<T>
    {
        public string? MessageEn { get; set; }
        public string? MessageJa { get; set; }
        public List<T>? Data { get; set; }
    }


  
    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

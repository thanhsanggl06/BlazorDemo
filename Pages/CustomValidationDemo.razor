@page "/custom-validation-demo"
@using System.ComponentModel.DataAnnotations

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h3>Custom Validation Attributes Demo</h3>
            <p class="text-muted">Ví dụ sử dụng Custom Validation Attributes với LocalizeString</p>

            <EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger mb-3" />

                @if (showSuccess)
                {
                    <div class="alert alert-success">Form validation passed! ✅</div>
                }

                <div class="mb-3">
                    <label class="form-label">Email *</label>
                    <InputText @bind-Value="Model.Email" class="form-control" />
                    <ValidationMessage For="@(() => Model.Email)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Phone Number *</label>
                    <InputText @bind-Value="Model.PhoneNumber" class="form-control" 
                               placeholder="0901234567 or +84901234567" />
                    <ValidationMessage For="@(() => Model.PhoneNumber)" />
                    <small class="text-muted">Custom: [PhoneNumber] attribute</small>
                </div>

                <div class="mb-3">
                    <label class="form-label">Password *</label>
                    <InputText type="password" @bind-Value="Model.Password" class="form-control" />
                    <ValidationMessage For="@(() => Model.Password)" />
                    <small class="text-muted">Custom: [StrongPassword] attribute</small>
                </div>

                <div class="mb-3">
                    <label class="form-label">Confirm Password *</label>
                    <InputText type="password" @bind-Value="Model.ConfirmPassword" class="form-control" />
                    <ValidationMessage For="@(() => Model.ConfirmPassword)" />
                    <small class="text-muted">Custom: [CompareField] attribute</small>
                </div>

                <div class="mb-3">
                    <label class="form-label">Birth Date *</label>
                    <InputDate @bind-Value="Model.BirthDate" class="form-control" />
                    <ValidationMessage For="@(() => Model.BirthDate)" />
                    <small class="text-muted">Custom: [AgeRange] attribute (18-65)</small>
                </div>

                <div class="mb-3">
                    <label class="form-label">Event Date</label>
                    <InputDate @bind-Value="Model.EventDate" class="form-control" />
                    <ValidationMessage For="@(() => Model.EventDate)" />
                    <small class="text-muted">Custom: [DateRange] Future date only</small>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-secondary ms-2" @onclick="ResetForm">Reset</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private UserRegistrationModel Model = new();
    private bool showSuccess = false;

    public class UserRegistrationModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Phone number is required")]
        [PhoneNumber] // Custom attribute với localization
        public string PhoneNumber { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required")]
        [StringLength(100, MinimumLength = 6, ErrorMessage = "Password must be 6-100 characters")]
        [Validation.StrongPassword] // Custom attribute với localization
        public string Password { get; set; } = string.Empty;

        [Required(ErrorMessage = "Confirm password is required")]
        [CompareField(nameof(Password))] // Custom attribute với localization
        public string ConfirmPassword { get; set; } = string.Empty;

        [Required(ErrorMessage = "Birth date is required")]
        [AgeRange(18, 65)] // Custom attribute với localization
        public DateTime? BirthDate { get; set; }

        [DateRange(DateRangeType.Future)] // Custom attribute với localization
        public DateTime? EventDate { get; set; }
    }

    private void HandleValidSubmit()
    {
        showSuccess = true;
        // Process form...
    }

    private void ResetForm()
    {
        Model = new UserRegistrationModel();
        showSuccess = false;
    }
}
